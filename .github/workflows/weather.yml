name: Weather Application

on:
  push:
    branches:
    - master

jobs:
  
  build:
    runs-on: ubuntu-latest
    name: Build and Test

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install Python Dependencies
      run: |
        cd server/
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 pytest
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # pytest
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Build Client and Test
      run: |
        cd client/ 
        npm install
        npm run build --if-present
        # npm test
    - name: Upload client build
      uses: actions/upload-artifact@v1
      with:
          name: build
          path: client/build
     
  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    name: Deploy

    steps:
    - uses: actions/checkout@master
    - name: Download client build
      uses: actions/download-artifact@v1
      with:
        name: build
    - name: Delete previous version
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.KEY_SECRET }}
        port: ${{ secrets.PORT }}
        script: |
          sudo systemctl stop weather-app
          sudo systemctl stop nginx
          rm -r /var/www/weather-application/client /var/www/weather-application/server
    - name: Copy client files to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.KEY_SECRET }}
        port: ${{ secrets.PORT }}
        source: "build"
        target: "/var/www/weather-application/client"
    - name: Copy server files to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.KEY_SECRET }}
        port: ${{ secrets.PORT }}
        source: "server"
        target: "/var/www/weather-application/"
    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.KEY_SECRET }}
        port: ${{ secrets.PORT }}
        script: |
          cd /var/www/weather-application/
          cp .secrets/.env server/
          cd server/
          python3 -m venv env
          source env/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          deactivate
          sudo systemctl start weather-app
          sudo systemctl start nginx


